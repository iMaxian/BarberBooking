// <auto-generated />
using System;
using BarberBooking.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BarberBooking.Migrations
{
    [DbContext(typeof(BarberBookingContext))]
    [Migration("20240104120202_Barber")]
    partial class Barber
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BarberBooking.Models.Barber", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Prenume")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Rateing")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Barber");
                });

            modelBuilder.Entity("BarberBooking.Models.Serviciu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("BarberID")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(6,2)");

                    b.Property<DateTime>("Data_Programare")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tip_Serviciu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("BarberID");

                    b.ToTable("Serviciu");
                });

            modelBuilder.Entity("BarberBooking.Models.Serviciu", b =>
                {
                    b.HasOne("BarberBooking.Models.Barber", "Barber")
                        .WithMany("Servicii")
                        .HasForeignKey("BarberID");

                    b.Navigation("Barber");
                });

            modelBuilder.Entity("BarberBooking.Models.Barber", b =>
                {
                    b.Navigation("Servicii");
                });
#pragma warning restore 612, 618
        }
    }
}
